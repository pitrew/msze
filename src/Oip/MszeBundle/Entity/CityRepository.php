<?php

namespace Oip\MszeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CityRepository extends EntityRepository
{    
    public function countAll()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT COUNT(c) FROM OipMszeBundle:City c')
            ->getSingleScalarResult();
    }
    
    public function findByAny($pattern, $limit = null, $offset = null)
    {
        $pattern = str_replace('\\', '\\\\\\', $pattern);
        $pattern = str_replace('_', '\\_', $pattern);
        $pattern = str_replace('%', '\\%', $pattern);
        
        $queryString = "select c from OipMszeBundle:City c where c.name " .
                    "like :pattern or c.slug like :pattern order by c.name";
        
        $q = $this->getEntityManager()
                ->createQuery($queryString)
                ->setParameter('pattern', '%'.$pattern.'%');
        
        if ($limit != null) {
            $q = $q->setMaxResults(intval($limit, 10));
        }
        if ($offset != null) {
            $q = $q->setFirstResult(intval($offset, 10));
        }
        return $q->getResult();
    }
    
    public function findAllChurches($city_id)
    {
        return $this->getEntityManager()
                ->createQuery('select c from OipMszeBundle:Church c ' .
                        'where c.district in (select d from OipMszeBundle:District d where d.city = :city_id)')
                ->setParameters(array('city_id' => $city_id))
                ->getResult();
    }
    
    public function findAllHours($city_id, $day)
    {
        $str = '1=1 ';
        switch ($day)
        {
            case 'mon':
                $str = 'm.day_mon = 1';
                break;
            case 'tue':
                $str = 'm.day_tue = 1';
                break;
            case 'wed':
                $str = 'm.day_wed = 1';
                break;
            case 'thu':
                $str = 'm.day_thu = 1';
                break;
            case 'fri':
                $str = 'm.day_fri = 1';
                break;
            case 'sat':
                $str = 'm.day_sat = 1';
                break;
            case 'sun':
                $str = 'm.day_sun = 1';
                break;
        }
        
        return $this->getEntityManager()
                ->createQuery('select m.start_time as st from OipMszeBundle:Mass m, OipMszeBundle:Church c, OipMszeBundle:District d where '
                        . 'm.church = c.id and c.district = d.id and d.city = :city_id '
                        . ' and (' .
                        $str
                        . ') group by m.start_time')
                        //m.day_mon = :d_mon and m.day_tue = :d_tue and m.day_wed = :d_wed '
                        //. ' and m.day_thu = :d_thu and m.day_fri = :d_fri and m.day_sat = :d_sat and m.day_sun = :d_sun)'
                        //. ' group by m.start_time')
                ->setParameters(array('city_id' => $city_id))
                ->getResult();
    }
    
    public function getAll()
    {
        $q = $this->getEntityManager()->getConnection();
        $results = $q->fetchAll("select " 
                . "ci.id, ci.name," // ci.slug, "
                . "d.id as did, d.name as dname, "// d.slug as dslug, "
                . "c.id as cid, c.name as cname, c.address as caddress, "
                . "c.latitude as clat, c.longitude as clgt, c.description as cdesc, "//c.slug as cslug,"
                . "m.start_time as mst, m.details as mdetails, m.day_mon as day_mon, "
                . "m.day_tue as day_tue, m.day_wed as day_wed, m.day_thu as day_thu, "
                . "m.day_fri as day_fri, m.day_sat as day_sat, m.day_sun as day_sun "
                . "from City ci " 
                . "inner join District d on d.city_id = ci.id "
                . "left outer join Church c on c.district_id = d.id "
                . "left outer join Mass m on m.church_id = c.id "
                . "order by ci.id asc, d.id asc, c.id asc, m.id asc"
                );
//        var_dump($results);  
        return $results;
    }
    

}
